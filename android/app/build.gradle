plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id 'com.google.gms.google-services'
    id "org.jetbrains.kotlin.android"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '2'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.1'
}

android {
    compileSdk flutter.compileSdkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    namespace = "com.alnoor.classmyte"
    defaultConfig {
        applicationId "com.alnoor.classmyte"
        minSdkVersion 23  
        targetSdkVersion flutter.targetSdkVersion
        versionCode 4
        versionName "1.3"
        multiDexEnabled true
    }

    signingConfigs {
        release {
            storeFile file("C:/Users/Administrator/Desktop/my-release-key.keystore")  // Path to your keystore file
            storePassword "alnoor"  // Password for the keystore
            keyAlias "ReleaseKeySign"  // Alias you used when generating the keystore
            keyPassword "alnoor"  // Password for the key
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release  // Reference the signing config
            
            // Enable ProGuard for release builds to shrink and obfuscate the code
            minifyEnabled true
            shrinkResources true

            // Generate debug symbols for native code
            ndk {
                debugSymbolLevel 'FULL'
            }
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation platform('com.google.firebase:firebase-bom:33.3.0')
    implementation 'com.google.firebase:firebase-analytics' // Add other Firebase dependencies as needed
    implementation 'androidx.multidex:multidex:2.0.1' // Required for multidex support
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.8.6' // Updated version
    implementation 'androidx.lifecycle:lifecycle-service:2.8.6' // Add this line for LifecycleService
    implementation 'androidx.core:core-ktx:1.13.1' // Latest version
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9"
    implementation 'com.google.android.gms:play-services-ads:23.3.0'
    implementation 'com.android.billingclient:billing:6.0.1'

}

